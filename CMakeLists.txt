### Configuration
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

#
# Project Info
#
PROJECT(ocelot)
SET(EXECUTABLE_NAME ocelot_server)
SET(LIBRARY_NAME ocelot)
SET(EXECUTABLE_TESTS_NAME ocelot_tests)

#
# Config
#
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

#
# SPECIFY YOUR GMOCK AND GTEST PATH
#

# Set environment GTEST_PATH=../
IF (DEFINED ENV{GTEST_PATH})
  SET(GTEST_PATH ENV{GTEST_PATH})
ELSE()
  SET(GTEST_PATH ../gmock-1.7.0/gtest)
ENDIF (DEFINED ENV{GTEST_PATH})

# Set environment GMOCK_PATH=../
IF (DEFINED ENV{GMOCK_PATH})
  SET(GMOCK_PATH ENV{GMOCK_PATH})
ELSE()
  SET(GMOCK_PATH ../gmock-1.7.0)
ENDIF (DEFINED ENV{GMOCK_PATH})

ADD_DEFINITIONS( -DGTEST_LANG_CXX11=1 )

IF (DEFINED ENV{GTEST_USE_OWN_TR1_TUPLE})
  ADD_DEFINITIONS( -DGTEST_USE_OWN_TR1_TUPLE=1 )
ENDIF (DEFINED ENV{GTEST_USE_OWN_TR1_TUPLE})

#
# Compiler Settings
#
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -Wpedantic -O2")

IF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  # Mac OS X specific code
  MESSAGE(STATUS "Compliling for Darwin")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
  MESSAGE(STATUS "Compliling for Darwin")
ENDIF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

MESSAGE(STATUS ${CMAKE_CXX_FLAGS})

#
# Project Deps
#
FIND_LIBRARY(
  EV_LIBS
  NAMES
  ev
  HINTS /usr/local/lib
  )

FIND_LIBRARY(
  MYSQLPP_LIBS
  NAMES
  mysqlpp
  HINTS /usr/local/lib
  )

FIND_LIBRARY(
  BOOST_IOSTREAMS_LIBS
  NAMES
  boost_iostreams
  HINTS /usr/local/lib
  )

FIND_LIBRARY(
  BOOST_SYSTEM_LIBS
  NAMES
  boost_system
  HINTS /usr/local/lib
  )

FIND_LIBRARY(
  PTHREAD
  NAMES
  pthread
  )

IF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  FIND_LIBRARY(
    LIBC++
    NAMES
    stdc++
    )
ENDIF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

#
# Include
#
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/src")
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/test")
INCLUDE_DIRECTORIES("/usr/local/include")
INCLUDE_DIRECTORIES("/usr/include/mysql")
INCLUDE_DIRECTORIES("/usr/local/include/mysql")

#
# Project Lib
#
FILE(
  GLOB_RECURSE
  SRC_FILES
  src/*
  )

LIST(REMOVE_ITEM SRC_FILES "${CMAKE_CURRENT_SOURCE_DIR}/src/main.cpp")

ADD_LIBRARY(
  ${LIBRARY_NAME}
  ${SRC_FILES}
  )

#
# Project Runner
#
FILE(
  GLOB_RECURSE
  RUNNER_FILES
  src/main.cpp
  )

ADD_EXECUTABLE(
  ${EXECUTABLE_NAME}
  ${RUNNER_FILES}
  )

TARGET_LINK_LIBRARIES(
  ${EXECUTABLE_NAME}
  ${LIBRARY_NAME}
  ${EV_LIBS}
  ${MYSQLPP_LIBS}
  ${BOOST_IOSTREAMS_LIBS}
  ${BOOST_SYSTEM_LIBS}
  ${LIBC++}
  ${PTHREAD}
  )

#
# Project Test and Test Runner
#
IF (BUILD_TESTING)

  #
  # Test Deps
  #
  FIND_LIBRARY(
    GTEST_LIBS
    NAMES
    gtest
    HINTS ${GTEST_PATH} "${GTEST_PATH}/lib" "${GTEST_PATH}/lib/.libs"
    )

  FIND_LIBRARY(
    GTEST_MAIN_LIBS
    NAMES
    gtest_main
    HINTS ${GTEST_PATH} "${GTEST_PATH}/lib" "${GTEST_PATH}/lib/.libs"
    )

  FIND_LIBRARY(
    GMOCK_LIBS
    NAMES
    gmock
    HINTS ${GMOCK_PATH} "${GMOCK_PATH}/lib" "${GMOCK_PATH}/lib/.libs"
    )

  FIND_LIBRARY(
    GMOCK_MAIN_LIBS
    NAMES
    gmock_main
    HINTS ${GMOCK_PATH} "${GMOCK_PATH}/lib" "${GMOCK_PATH}/lib/.libs"
    )

  #
  # Test Includes
  #
  INCLUDE_DIRECTORIES("${GTEST_PATH}/include")
  INCLUDE_DIRECTORIES("${GMOCK_PATH}/include")

  FILE(
    GLOB_RECURSE
    TEST_FILES
    test/*
    )

  ADD_EXECUTABLE(
    ${EXECUTABLE_TESTS_NAME}
    EXCLUDE_FROM_ALL
    ${TEST_FILES}
    )

  TARGET_LINK_LIBRARIES(
    ${EXECUTABLE_TESTS_NAME}
    ${LIBRARY_NAME}
    ${EV_LIBS}
    ${MYSQLPP_LIBS}
    ${BOOST_IOSTREAMS_LIBS}
    ${BOOST_SYSTEM_LIBS}
    ${GTEST_LIBS}
    ${GTEST_MAIN_LIBS}
    ${GMOCK_LIBS}
    ${GMOCK_MAIN_LIBS}
    ${LIBC++}
    ${PTHREAD}
    )

ENDIF(BUILD_TESTING)
